apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'


def depend = rootProject.ext.dependencies

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
//        arg("AROUTER_GENERATE_DOC", "enable")
    }
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        buildConfigField "String", "BUILD_TIME", "\"${getSMBuildTime()}\""
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        ndk {
            //设置支持的SO库架构
            abiFilters "arm64-v8a"
        }
        // 配置此参数，方可生成混淆文件
        consumerProguardFiles "consumer-rules.pro"
    }
    // 移除lint检查的error
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        disable 'RestrictedApi'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures.dataBinding = true
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
        exclude '.readme'
        pickFirst 'lib/armeabi-v7a/*.so'
        pickFirst 'lib/arm64-v8a/*.so'
        pickFirst 'lib/x86_64/*.so'
        pickFirst 'lib/x86/*.so'
        exclude 'AndroidManifest.xml'
        exclude 'classes.jar'
    }

}

dependencies {
    implementation project(':common-sdk')
    implementation rootProject.ext.support.kotlin
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':common-data')
    implementation project(':lib-resources')
    implementation project(':common-base')
    implementation project(':screen-match')
    implementation project(':common-router')
    implementation project(':common-sdk-module:imageloader')
//    testImplementation rootProject.ext.support.junit
    implementation project(':common-sdk-module:arouter-api')
    implementation project(':common-sdk-module:arouter-annotation')
    kapt project(':common-sdk-module:arouter-compiler')
}

def getSMBuildTime() {
    def createTime = new Date().format("YYYY-MM-dd HH:mm:ss", TimeZone.getTimeZone("GMT+08:00"))
    return createTime
}
