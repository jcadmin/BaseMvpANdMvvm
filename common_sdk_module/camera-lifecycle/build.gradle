/*
 * Copyright 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
//import androidx.build.LibraryGroups
//import androidx.build.Publish

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        buildConfigField "String", "BUILD_TIME", "\"${getSMBuildTime()}\""
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 10
        versionName "2.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        /* javaCompileOptions {
             annotationProcessorOptions {
                 arguments = [moduleName: project.getName()]
             }
         }*/
        ndk {
            //设置支持的SO库架构
            abiFilters "arm64-v8a"
        }
    }
    // 移除lint检查的error
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        disable 'RestrictedApi'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures.dataBinding = true
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
        exclude '.readme'
        pickFirst 'lib/armeabi-v7a/*.so'
        pickFirst 'lib/arm64-v8a/*.so'
        pickFirst 'lib/x86_64/*.so'
        pickFirst 'lib/x86/*.so'
        exclude 'AndroidManifest.xml'
        exclude 'classes.jar'
    }

}

def getSMBuildTime() {
    def createTime = new Date().format("YYYY-MM-dd HH:mm:ss", TimeZone.getTimeZone("GMT+08:00"))
    return createTime
}



dependencies {
    api rootProject.ext.support.annotations
    api rootProject.ext.support.lifecycle
    kapt rootProject.ext.support.auto_value
    implementation rootProject.ext.support.guava
    implementation rootProject.ext.support.auto_value_annotations
    api rootProject.ext.support.annotation_experimental
    implementation rootProject.ext.support.kotlin_stdlib
    implementation rootProject.ext.support.androidx_core
    implementation rootProject.ext.support.concurrent_futures

//    api(project(":common_sdk_module:camera-core"))
    api rootProject.ext.microLight.camera_core
}

android {
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
    }

    // Use Robolectric 4.+
    testOptions.unitTests.includeAndroidResources = true

    packagingOptions {
        pickFirst "META-INF/support.camera_camera-core.version"
    }
}
